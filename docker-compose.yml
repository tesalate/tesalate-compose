version: '3.9'

services:
  api:
    build:
      context: ../main-api/
      dockerfile: Dockerfile
    volumes:
      - ./logs/api:/home/node/app/logs
      - ../main-api:/home/node/app/
    container_name: api
    ports:
      - '4400:4400'
    depends_on:
      - mongo-0
    links:
      - mongo-0
    networks:
      - main-network
    restart: always
    env_file:
      - .env
    healthcheck:
      test: curl --fail http://api:4400 || exit 1 
      interval: 10s
      start_period: 30s  
    command: [ "bash", "-c", "./wait-for-it.sh mongo-0:27017 -- yarn dev -L"]

  data-collector:
    build:
      context: ../main-datacollector/
      dockerfile: Dockerfile
    volumes:
      - ../main-datacollector/:/home/node/app/
    container_name: data-collector
    env_file:
      - .env
    depends_on:
      - mongo-0
    links:
      - mongo-0
    networks:
      - main-network
    command: [ "bash", "-c", "./wait-for-it.sh mongo-0:27017 -- yarn dev -L"]

  mongo-0:
    hostname: 'mongodb'
    container_name: 'mongo-0'
    image: 'mongo:5.0.3'
    ports:
      - 27017:27017
    networks:
      - main-network
    environment:
      - MONGO_INITDB_DATABASE=${BASE_MONGO_INITDB_DATABASE}_${BUILD_ENVIRONMENT}
    env_file:
      - .env
    volumes:
      - ../mongo/$BUILD_ENVIRONMENT/data/mongo-0:/data/db
      - ../mongo/scripts/create-user.sh:/docker-entrypoint-initdb.d/create-user.sh
      - ../mongo/$BUILD_ENVIRONMENT/keyfile/file.key:/auth/file.key
    healthcheck:
      # test: test $$(echo "rs.status().ok" | mongosh -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
      test: echo 'db.runCommand("ping").ok' | mongo mongo-0:27017/${BASE_MONGO_INITDB_DATABASE}_${BUILD_ENVIRONMENT} --quiet
      interval: 10s
      start_period: 30s
    restart: always
    links:
      - mongo-1
      - mongo-2
    command: ["--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all",  "--keyFile", "/auth/file.key"]

  mongo-1:
    hostname: 'mongodb'
    container_name: 'mongo-1'
    image: 'mongo:5.0.3'
    ports:
      - 27018:27017
    networks:
      - main-network
    volumes:
      - ../mongo/$BUILD_ENVIRONMENT/data/mongo-1:/data/db
      - ../mongo/$BUILD_ENVIRONMENT/keyfile/file.key:/auth/file.key
    command: ["--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all",  "--keyFile", "/auth/file.key"]

  mongo-2:
    hostname: 'mongodb'
    container_name: 'mongo-2'
    image: 'mongo:5.0.3'
    ports:
        - 27019:27017
    networks:
      - main-network
    volumes:
        - ../mongo/$BUILD_ENVIRONMENT/data/mongo-2/:/data/db
        - ../mongo/$BUILD_ENVIRONMENT/keyfile/file.key:/auth/file.key
    command: ["--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all",  "--keyFile", "/auth/file.key"]

  mongoclient:
    image: mongo:5.0.3
    container_name: 'mongo-client'
    networks:
      - main-network
    depends_on:
      - mongo-0
      - mongo-1
      - mongo-2
    env_file:
      - .env
    volumes:
      - ../mongo/scripts/init-replica.sh:/deployment_scripts/init-replica.sh
      - ../mongo/$BUILD_ENVIRONMENT/mongostatus:/data/
    entrypoint:
      - /deployment_scripts/init-replica.sh

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_URL: "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo-0,mongo-1,mongo-2:27017/${BASE_MONGO_INITDB_DATABASE}_${BUILD_ENVIRONMENT}?replicaSet=${MONGO_REPLICA_SET_NAME}&readPreference=primaryPreferred&authSource=admin"
      ME_CONFIG_MONGODB_AUTH_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_AUTH_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_AUTH_DATABASE: 'admin'

    ports:
      - "8081:8081"
    networks:
      - main-network
    depends_on:
      - mongo-0
      
networks:
  main-network:
    driver: bridge