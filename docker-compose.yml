version: '3.9'

services:
  ui:
    container_name: ui
    image: devintyler2626/tesalate-ui:latest
    depends_on:
      - api
    ports:
      - '${UI_PORT:-8080}:80'

  api:
    container_name: api
    image: devintyler2626/tesalate-api:latest
    extra_hosts:
      - "mongo-0:${MONGO_HOST}"
      - "mongo-1:${MONGO_HOST}"
      - "mongo-2:${MONGO_HOST}"
    # depends_on:
    #   - mongo-0
    #   - mongo-1
    #   - mongo-2
    # links:
    #   - mongo-0
    # networks:
    #   - main-network
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://api:4400/health || exit 1 
      interval: 10s
      start_period: 30s  
    ports:
      - '${API_PORT}:${API_PORT}'
    # command: [ "bash", "-c", "./wait-for-it.sh mongo-0:27017 -- yarn start"]
    command: "yarn start" 

  data-collector:
    container_name: data-collector
    image: devintyler2626/tesalate-data-collector:latest
    restart: always
    env_file:
      - .env
    extra_hosts:
      - "mongo-0:${MONGO_HOST}"
      - "mongo-1:${MONGO_HOST}"
      - "mongo-2:${MONGO_HOST}"
    # depends_on:
    #   - mongo-0
    #   - mongo-1
    #   - mongo-2
    # links:
    #   - mongo-0
    # networks:
    #   - main-network
    # command: [ "bash", "-c", "./wait-for-it.sh mongo-0:27017 -- yarn start"]
    command: "yarn start"

  mongo-0:
    hostname: 'mongodb'
    container_name: 'mongo-0'
    image: 'mongo:5.0.3'
    ports:
      - ${MONGO_HOST_PORT:-27017}:27017
    # networks:
    #   - main-network
    environment:
      - MONGO_INITDB_DATABASE=${BASE_MONGO_INITDB_DATABASE}_${BUILD_ENVIRONMENT}
    env_file:
      - .env
    volumes:
      - $PWD/${BUILD_ENVIRONMENT}/data/mongo-0:/data/db
      - $PWD/${BUILD_ENVIRONMENT}/keyfile/file.key:/auth/file.key
      - $PWD/scripts/create-user.sh:/docker-entrypoint-initdb.d/create-user.sh
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo-0:27017/${BASE_MONGO_INITDB_DATABASE}_${BUILD_ENVIRONMENT} --quiet
      interval: 10s
      start_period: 30s
    restart: always
    links:
      - mongo-1
      - mongo-2
    command: ["--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all",  "--keyFile", "/auth/file.key"]

  mongo-1:
    hostname: 'mongodb'
    container_name: 'mongo-1'
    image: 'mongo:5.0.3'
    # networks:
    #   - main-network
    volumes:
      - $PWD/${BUILD_ENVIRONMENT}/data/mongo-1:/data/db
      - $PWD/${BUILD_ENVIRONMENT}/keyfile/file.key:/auth/file.key
    command: ["--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all",  "--keyFile", "/auth/file.key"]

  mongo-2:
    hostname: 'mongodb'
    container_name: 'mongo-2'
    image: 'mongo:5.0.3'
    # networks:
    #   - main-network
    volumes:
      - $PWD/${BUILD_ENVIRONMENT}/data/mongo-2:/data/db
      - $PWD/${BUILD_ENVIRONMENT}/keyfile/file.key:/auth/file.key
    command: ["--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all",  "--keyFile", "/auth/file.key"]
    
  mongo-client:
    image: mongo:5.0.3
    container_name: 'mongo-client'
    # networks:
    #   - main-network
    # depends_on:
    #   - mongo-0
    #   - mongo-1
    #   - mongo-2
    env_file:
      - .env
    volumes:
      - $PWD/scripts/init-replica.sh:/deployment_scripts/init-replica.sh
      - $PWD/${BUILD_ENVIRONMENT}/mongostatus:/data/
    entrypoint:
      - /deployment_scripts/init-replica.sh

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_URL: "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo-0,mongo-1,mongo-2:27017/${BASE_MONGO_INITDB_DATABASE}_${BUILD_ENVIRONMENT}?replicaSet=${MONGO_REPLICA_SET_NAME}&readPreference=primaryPreferred&authSource=admin"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_AUTH_DATABASE: 'admin'
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_INITDB_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_INITDB_PASSWORD}
    ports:
      - "8081:8081"
    # networks:
    #   - main-network
    # depends_on:
    #   - mongo-0
      
# networks:
#   main-network:
#     driver: host